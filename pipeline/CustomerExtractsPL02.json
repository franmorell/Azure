{
	"name": "CustomerExtractsPL02",
	"properties": {
		"activities": [
			{
				"name": "Copy data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Log Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"additionalColumns": [
							{
								"name": "RunId",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							{
								"name": "SystemId",
								"value": "EU-PL02"
							}
						],
						"sqlReaderQuery": {
							"value": "select \npv.Pod_PodmiotTyp,\npv.Pod_PodId,\n'ERP' = 'OPT',\n'customer_id/number' = pv.Pod_Kod, -- Nie jest unikatowy\n--[CDNP] Po usunięciu pracowników - już jest.\n'company_id/code' = 'PARTEC SYSTEM Sp. z o.o.',--pv.Pod_Kod,\n'Country_code' = 'PL',\n'Country' = 'Poland',\n'customer_name' = pv.Pod_Nazwa1 + '  '  + pv.Pod_Nazwa2 + '  ' + pv.Pod_Nazwa3 ,\n'mail_address1' = pv.Pod_Ulica +' '+ LTRIM(pv.Pod_NrDomu) + LTRIM(case when len(pv.Pod_NrLokalu)>0 then '/' + LTRIM(knt.Knt_NrLokalu) else '' end),\n-- [AG] 58 Rekordom brakuje adresów\n--[CDNP] OK - pominiete zostały rekordy pracowników\n'mail_address2' = NULL,\n'mail_city' = pv.Pod_Miasto,\n'mail_state' = NULL,\n'mail_postal_code' = pv.Pod_KodPocztowy,\n'mail_country' = knt.Knt_KrajISO,\n'terms_desc' = NULL,--pl.FPl_Nazwa, --Payment Terms no payment method!\n'salesrep' = NULL,\n'Salesperson Name' = NULL,\n'credit_status' = case when knt.Knt_BlokadaDok = 1 THEN 'blocked'  WHEN knt.Knt_Nieaktywny =1 then 'inactive' ELSE 'active' end ,\n'date_acct_opened' = knt.Knt_TS_Zal,\n'credit_limit' = knt.Knt_LimitKredytu,\n'credit_limit_used' = knt.Knt_LimitKredytuWykorzystany,\n'Balance' = WynikSaldo.SALDO,--nie ma możliwości policzenia balansu dla klienta na dany dzień?\n--[CDNP] jest, tylko pytanie jaki ma to sens - skoro wyrzucamy informacje o spłatach każdej z faktur?\n--[AG] proszę o policzenie tej wartości\n--[CDNP] OK - ujemne = należność, dodatnie to zobowiązanie\n'highest_credit_limit_used' = NULL,\n'last_payment_received_date' =  -- [AG] - czy da sie uzyskać te dane?\n--[CDNP] done -ostatnia wpłata w postaci zapisu bankowego po stonie wpływu\n            (\n\t\t\t\tselect  top 1\n\t\t\t\tdkb_datadok\n\t\t\t\t\n\n\t\t\t\tFROM  CDN.DokumentyKBView\n\n\t\t\t\tLEFT OUTER JOIN CDN.PodmiotyView On DKB_PodmiotTyp = Pod_PodmiotTyp And DKB_PodmiotId = Pod_PodId\n\t\t\t\t\t   LEFT OUTER JOIN (\n\t\t\t\t\t\t Select \n\t\t\t\t\t\t BRK_Kwota = Sum(Case When BRR_ZDokTyp = BRK_LDokTyp And BRR_ZDokID = BRK_LDokID Then BRK_KwotaSysL Else BRK_KwotaSysP End),\n\t\t\t\t\t\t BRR_ZDokId, BRR_ZDokTyp\n\t\t\t\t\t\t From CDN.BnkRozKwoty Join CDN.BnkRozRelacje On BRK_BRKId = BRR_BRKId\n\t\t\t\t\t\t Where BRK_DataDok <= convert(datetime, GETDATE() ,120)\n\t\t\t\t\t\t Group By BRR_ZDokId, BRR_ZDokTyp\n\t\t\t\t\t\t ) As Rozliczenia On BRR_ZDokTyp = DKB_TypDokumentuKB AND BRR_ZDokID=DKB_DKBId\n\n\t\t\t\t\t   WHERE   \n\n\t\t\t\t\t   DKB_DataDok <= convert(datetime, GETDATE() ,120)\n\t\t\t\t\t   AND DKB_PodmiotTyp =pv.Pod_PodmiotTyp\n\t\t\t\t\t   and dkb_typdokumentukb =2\n\t\t\t\t\t   and DKB_Kierunek =1\n\t\t\t\t\t   AND DKB_PodmiotId = pv.pod_podid\n\t\t\t\torder by DKB_DataDok desc\n\t\t\t),\n\n'last_Payment_received_amount' =  -- [AG] - czy da sie uzyskać te dane?\n--[CDNP] done -ostatnia wpłata w postaci zapisu bankowego po stonie wpływu\n\t\t\t(\n\t\t\t\tselect  top 1\n\t\t\t\tDKB_KwotaKierunkowa\n\t\t\t\t\n\n\t\t\t\tFROM  CDN.DokumentyKBView\n\n\t\t\t\tLEFT OUTER JOIN CDN.PodmiotyView On DKB_PodmiotTyp = Pod_PodmiotTyp And DKB_PodmiotId = Pod_PodId\n\t\t\t\t\t   LEFT OUTER JOIN (\n\t\t\t\t\t\t Select \n\t\t\t\t\t\t BRK_Kwota = Sum(Case When BRR_ZDokTyp = BRK_LDokTyp And BRR_ZDokID = BRK_LDokID Then BRK_KwotaSysL Else BRK_KwotaSysP End),\n\t\t\t\t\t\t BRR_ZDokId, BRR_ZDokTyp\n\t\t\t\t\t\t From CDN.BnkRozKwoty Join CDN.BnkRozRelacje On BRK_BRKId = BRR_BRKId\n\t\t\t\t\t\t Where BRK_DataDok <= convert(datetime, GETDATE() ,120)\n\t\t\t\t\t\t Group By BRR_ZDokId, BRR_ZDokTyp\n\t\t\t\t\t\t ) As Rozliczenia On BRR_ZDokTyp = DKB_TypDokumentuKB AND BRR_ZDokID=DKB_DKBId\n\n\t\t\t\t\t   WHERE   \n\n\t\t\t\t\t   DKB_DataDok <= convert(datetime, GETDATE() ,120)\n\t\t\t\t\t   AND DKB_PodmiotTyp =pv.Pod_PodmiotTyp\n\t\t\t\t\t   and dkb_typdokumentukb =2\n\t\t\t\t\t   and DKB_Kierunek =1\n\t\t\t\t\t   AND DKB_PodmiotId = pv.pod_podid\n\t\t\t\torder by DKB_DataDok desc\n\t\t\t),\n\n--'language_code' = NULL,-- [AG] potrzebujemy kod języka w którym będą wysyłane przypomnienia do klienta? powinien być podany jakiś domyślny język PL lub EN?\n'language_code' = knt.Knt_KrajISO,\n--[CDNP] nie ma takiego pola w Optimie. ale można zwrócić kod kraju - j/w\n\n'Bank Communication' = NULL,\n'Currency' = NULL,\n'Next Review Date' = CAST(NULL AS DATETIME),\n'Credit Analyst Or Collector ' = NULL,\n'Credit Exposure' =NULL,\n'Business Unit' = 'DY.CO', -- [AG] mozna na sztywno dać 'DY.CO'\n--[CDNP] OK\n'Geographical Location' = NULL,\n'Department Code' = NULL,\n'Blocked' = case when knt.Knt_BlokadaDok = 1 THEN 'TRUE' else 'FALSE' end,\n'Factoring info' = NULL,\n'VAT Registration No_' = knt.Knt_NipPelny\nfrom cdn.PodmiotyView pv \nleft outer join cdn.Kontrahenci knt on pv.Pod_PodmiotTyp = knt.Knt_PodmiotTyp and pv.Pod_PodId = knt.Knt_KntId\nleft outer join cdn.FormyPlatnosci fpl on fpl.FPl_FPlId = knt.Knt_FplID\nLEFT outer join (select DISTINCT pri.pri_praid, pri.pri_kod  from cdn.Pracidx pri) as Prac on Prac.PRI_PraId = pv.Pod_PodId and pv.Pod_PodmiotTyp =3\n\nleft outer join \n\n\t\t\t(\n\t\t\t\tselect \n\t\t\t\tPod_PodId,\n\t\t\t\tPod_PodmiotTyp,\n\t\t\t\tSUM(\n\t\t\t\tCase When (DKB_TypDokumentuKB =1 AND DKB_Kierunek = -1 or DKB_TypDokumentuKB =2 AND DKB_Kierunek = 1) THEN DKB_KwotaSys - IsNull(BRK_Kwota,0) ELSE 0 END\n\t\t\t\t-Case When (DKB_TypDokumentuKB =1 AND DKB_Kierunek = 1 or DKB_TypDokumentuKB =2 AND DKB_Kierunek = -1) THEN DKB_KwotaSys - IsNull(BRK_Kwota,0) ELSE 0 END  \n\t\t\t\t) as SALDO\n\t\t\t\tFROM  CDN.DokumentyKBView\n\n\t\t\t\tLEFT OUTER JOIN CDN.PodmiotyView On DKB_PodmiotTyp = Pod_PodmiotTyp And DKB_PodmiotId = Pod_PodId\n\t\t\t\t\t   LEFT OUTER JOIN (\n\t\t\t\t\t\t Select \n\t\t\t\t\t\t BRK_Kwota = Sum(Case When BRR_ZDokTyp = BRK_LDokTyp And BRR_ZDokID = BRK_LDokID Then BRK_KwotaSysL Else BRK_KwotaSysP End),\n\t\t\t\t\t\t BRR_ZDokId, BRR_ZDokTyp\n\t\t\t\t\t\t From CDN.BnkRozKwoty Join CDN.BnkRozRelacje On BRK_BRKId = BRR_BRKId\n\t\t\t\t\t\t Where BRK_DataDok <= convert(datetime, GETDATE() ,120)\n\t\t\t\t\t\t Group By BRR_ZDokId, BRR_ZDokTyp\n\t\t\t\t\t\t ) As Rozliczenia On BRR_ZDokTyp = DKB_TypDokumentuKB AND BRR_ZDokID=DKB_DKBId\n\n\t\t\t\t\t   WHERE   \n\n\t\t\t\t\tDKB_Waluta ='' \n\t\t\t\t\t  AND DKB_Rozliczono <> 0 \n\t\t\t\t\t   AND DKB_DataDok <= convert(datetime, GETDATE() ,120)\n\t\t\t\t\t  AND DKB_KwotaSys - IsNull(BRK_Kwota,0) <> 0 \n\t\t\t\t\t   AND DKB_PodmiotTyp =1\n\t\t\t\t\t   GROUP BY Pod_PodId, Pod_PodmiotTyp\n\t\t\t) as WynikSaldo on WynikSaldo.Pod_PodId = pv.Pod_PodId and WynikSaldo.Pod_PodmiotTyp = pv.Pod_PodmiotTyp\n\n\n\n\nwhere pv.Pod_PodmiotTyp in (1) and knt.Knt_Rodzaj IN (1,4)",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "ERP",
									"type": "String"
								},
								"sink": {
									"name": "ERP",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "customer_id/number",
									"type": "String"
								},
								"sink": {
									"name": "No_",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "company_id/code",
									"type": "String"
								},
								"sink": {
									"name": "Company_Name",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Country_code",
									"type": "String"
								},
								"sink": {
									"name": "Country_Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Country",
									"type": "String"
								},
								"sink": {
									"name": "Country_Name",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "customer_name",
									"type": "String"
								},
								"sink": {
									"name": "Name",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "mail_address1",
									"type": "String"
								},
								"sink": {
									"name": "Address",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "mail_address2",
									"type": "Int32"
								},
								"sink": {
									"name": "Address 2",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "mail_city",
									"type": "String"
								},
								"sink": {
									"name": "City",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "mail_state",
									"type": "Int32"
								},
								"sink": {
									"name": "State",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "mail_postal_code",
									"type": "String"
								},
								"sink": {
									"name": "Post Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "mail_country",
									"type": "String"
								},
								"sink": {
									"name": "Cust_Country_Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "terms_desc",
									"type": "String"
								},
								"sink": {
									"name": "Payment Terms Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "salesrep",
									"type": "Int32"
								},
								"sink": {
									"name": "Salesperson Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Salesperson Name",
									"type": "Int32"
								},
								"sink": {
									"name": "Salesperson Name",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "credit_status",
									"type": "String"
								},
								"sink": {
									"name": "credit_status",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "date_acct_opened",
									"type": "DateTime"
								},
								"sink": {
									"name": "date_acct_opened",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "credit_limit",
									"type": "Decimal"
								},
								"sink": {
									"name": "Credit Limit (LCY)",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "credit_limit_used",
									"type": "Decimal"
								},
								"sink": {
									"name": "credit_limit_used",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "Balance",
									"type": "Decimal"
								},
								"sink": {
									"name": "Balance",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "highest_credit_limit_used",
									"type": "Int32"
								},
								"sink": {
									"name": "highest_credit_limit_used",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "last_payment_received_date",
									"type": "DateTime"
								},
								"sink": {
									"name": "last_payment_received_date",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "last_Payment_received_amount",
									"type": "Decimal"
								},
								"sink": {
									"name": "last_payment_received_amount",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "language_code",
									"type": "String"
								},
								"sink": {
									"name": "Language_Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Bank Communication",
									"type": "Int32"
								},
								"sink": {
									"name": "Bank_Communication",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Currency",
									"type": "Int32"
								},
								"sink": {
									"name": "Currency_code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Next Review Date",
									"type": "DateTime"
								},
								"sink": {
									"name": "Next_Review_Date",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "Credit Analyst Or Collector ",
									"type": "Int32"
								},
								"sink": {
									"name": "Credit_Analyst",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Credit Exposure",
									"type": "Int32"
								},
								"sink": {
									"name": "Credit_Exposure",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "Business Unit",
									"type": "String"
								},
								"sink": {
									"name": "Business_Unit",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Geographical Location",
									"type": "Int32"
								},
								"sink": {
									"name": "Geographical_Location",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Department Code",
									"type": "Int32"
								},
								"sink": {
									"name": "Department_Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "RunId"
								},
								"sink": {
									"name": "RunId",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "SystemId"
								},
								"sink": {
									"name": "SystemId",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Blocked",
									"type": "String"
								},
								"sink": {
									"name": "Blocked",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Factoring info",
									"type": "Int32"
								},
								"sink": {
									"name": "Factoring",
									"type": "Int16"
								}
							},
							{
								"source": {
									"name": "VAT Registration No_",
									"type": "Int32"
								},
								"sink": {
									"name": "VAT Registration No_",
									"type": "String"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "ComarchPL",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "CustomerExtracts",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Log Start",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[load].[uspLogStart]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceName": {
							"value": {
								"value": "@pipeline().parameters.SourceName",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceType": {
							"value": "SQL",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Log Fail",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[load].[uspLogEnd]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceName": {
							"value": {
								"value": "@pipeline().parameters.SourceName",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceType": {
							"value": "SQL",
							"type": "String"
						},
						"Status": {
							"value": "Failed",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Log Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[load].[uspLogEnd]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceName": {
							"value": {
								"value": "@pipeline().parameters.SourceName",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceType": {
							"value": "SQL",
							"type": "String"
						},
						"Status": {
							"value": "Success",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "uspCopyData",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Log Success",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[framework].[uspCopyData]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceTableName": {
							"value": "CustomerExtracts",
							"type": "String"
						},
						"SourceTableSchema": {
							"value": "stg",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"SourceName": {
				"type": "string",
				"defaultValue": "EU-PL02-CustomerExtract"
			}
		},
		"folder": {
			"name": "PL Comarch"
		},
		"annotations": [],
		"lastPublishTime": "2021-09-02T21:02:04Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}