{
	"name": "CustomerExtractsHK02",
	"properties": {
		"activities": [
			{
				"name": "Copy data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Log Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"additionalColumns": [
							{
								"name": "RunId",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							{
								"name": "SystemId",
								"value": "AP-HK02"
							}
						],
						"sqlReaderQuery": {
							"value": "DECLARE @CurrencyCode AS NVARCHAR(50)\nSELECT @CurrencyCode = IIF([LCY Code] = 'HK$', 'HKD', [LCY Code])\nFROM dbo.[@{pipeline().parameters.sourceSchema}$General Ledger Setup];\n\nWith AccountOpened as (\n\tselect \n\t\tcle.[New Value] as Customer_No,\n\t\tMIN(cle.[Date and Time]) as date_acct_opened\n\tFROM dbo.[@{pipeline().parameters.sourceSchema}$Change Log Entry] cle\n\tWHERE cle.[Table No_] = 18\n\t\tAND cle.[Field No_] = 1\n\t\tAND cle.[Type of Change] = 0\n\tGROUP BY cle.[New Value]\n)\nSELECT\n\t'Navision' as ERP\n\t,Cust.[No_]\n\t,(select(dbo.[@{pipeline().parameters.sourceSchema}$Company Information].Name)\n\t\tFROM dbo.[@{pipeline().parameters.sourceSchema}$Company Information]) AS Company_Name\n\t,(select dbo.[@{pipeline().parameters.sourceSchema}$Company Information].[Country Code]\n\tFROM dbo.[@{pipeline().parameters.sourceSchema}$Company Information]) AS Country_Code\n\t,(select dbo.[@{pipeline().parameters.sourceSchema}$Country].Name\n\tFROM dbo.[@{pipeline().parameters.sourceSchema}$Country]\n\tWHERE dbo.[@{pipeline().parameters.sourceSchema}$Country].Code = (select dbo.[@{pipeline().parameters.sourceSchema}$Company Information].[Country Code]\n\tFROM dbo.[@{pipeline().parameters.sourceSchema}$Company Information])) AS Country_Name\n\t,Cust.Name\n\t,Cust.Address\n\t,Cust.[Address 2]\n\t,Cust.City\n\t,Cust.County AS State\n\t,Cust.[Post Code]\n\t,(SELECT CASE Cust.[Country Code]\n\tWHEN '' then (SELECT(dbo.[@{pipeline().parameters.sourceSchema}$Company Information].[Country Code]) FROM dbo.[@{pipeline().parameters.sourceSchema}$Company Information])\n\tELSE Cust.[Country Code] END) AS Cust_Country_Code\n\t,Cust.[Payment Terms Code]\n\t,Cust.[Salesperson Code]\n\t,sp.Name as [Salesperson Name]\n\t,(select Case Cust.Blocked\n\twhen 0 THEN 'Active' ELSE 'Blocked' END) AS credit_status\n\t,IIF(ao.date_acct_opened = '1900-01-01', NULL, ao.date_acct_opened) as date_acct_opened\n\t,Cust.[Credit Limit (LCY)]\n\t,Cust.[Credit Limit (LCY)] - (SELECT ISNULL(SUM(dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry].[Amount (LCY)]), 0)\n\tFROM dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry]\n\tWHERE dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry].[Customer No_] = Cust.No_) AS credit_limit_used\n\t,(SELECT ISNULL(SUM(dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry].[Amount (LCY)]), 0)\n\tFROM dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry]\n\tWHERE dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry].[Customer No_] = Cust.No_) AS Balance\n\t,NULL AS highest_credit_limit_used\n\t,(SELECT ISNULL(MAX(dbo.[@{pipeline().parameters.sourceSchema}$Cust_ Ledger Entry].[Document Date]), 0)\n\tFROM dbo.[@{pipeline().parameters.sourceSchema}$Cust_ Ledger Entry]\n\tWHERE (dbo.[@{pipeline().parameters.sourceSchema}$Cust_ Ledger Entry].[Customer No_] = Cust.No_)) AS last_payment_received_date\n\t,(SELECT ISNULL(MAX(dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry].Amount), 0)\n\tFROM dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry]\n\tWHERE dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry].[Document Type] = 1\n\tAND dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry].[Customer No_] = Cust.No_\n\tAND dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry].Amount < 0\n\t/*AND dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry].[Entry Type] = 0*/\n\t) AS last_payment_received_amount\n\t,null AS Language_Code\n\t,'' AS Bank_Communication,\nCASE\n\tWHEN Cust.[Currency Code] = '' or Cust.[Currency Code] is null then @CurrencyCode\n\tELSE IIF(Cust.[Currency Code] = 'HK$', 'HKD', Cust.[Currency Code])\nEND AS Currency_Code\n\t,Cast( null as datetime) AS Next_Review_Date\n\t,NULL As Credit_Analyst\n\t,NULL As Credit_Exposure\n\t,NULL AS Business_Unit\n\t,NULL AS Geographical_Location\n\t,NULL AS Department_Code\n\t,CASE\n\tWHEN Cust.Blocked = 0 THEN 'Empty'\n\tWHEN Cust.Blocked = 1 THEN 'Ship'\n\tWHEN Cust.Blocked = 2 THEN 'Invoice'\n\tWHEN Cust.Blocked = 3 THEN 'All'\n\tELSE 'Unknown'\n\tEND AS Blocked\n\t,null as Factoring\n\t,Cust. [VAT Registration No_] AS [VAT Registration No_]\n\t,CASE\n\t WHEN Cust.Status = 0 THEN 'Active'\n\t ELSE 'Inactive'\n\tEND AS Status\t\nFROM dbo.[@{pipeline().parameters.sourceSchema}$Customer] as Cust\nLEFT JOIN dbo.[@{pipeline().parameters.sourceSchema}$Salesperson_Purchaser] sp ON Cust.[Salesperson Code] = sp.Code\nLEFT JOIN AccountOpened as ao on ao.Customer_No = Cust.No_",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "ERP",
									"type": "String"
								},
								"sink": {
									"name": "ERP",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "No_",
									"type": "String"
								},
								"sink": {
									"name": "No_",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Company_Name",
									"type": "String"
								},
								"sink": {
									"name": "Company_Name",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Country_Code",
									"type": "String"
								},
								"sink": {
									"name": "Country_Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Country_Name",
									"type": "String"
								},
								"sink": {
									"name": "Country_Name",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Name",
									"type": "String"
								},
								"sink": {
									"name": "Name",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Address",
									"type": "String"
								},
								"sink": {
									"name": "Address",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Address 2",
									"type": "String"
								},
								"sink": {
									"name": "Address 2",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "City",
									"type": "String"
								},
								"sink": {
									"name": "City",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "State",
									"type": "String"
								},
								"sink": {
									"name": "State",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Post Code",
									"type": "String"
								},
								"sink": {
									"name": "Post Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Cust_Country_Code",
									"type": "String"
								},
								"sink": {
									"name": "Cust_Country_Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Payment Terms Code",
									"type": "String"
								},
								"sink": {
									"name": "Payment Terms Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Salesperson Code",
									"type": "String"
								},
								"sink": {
									"name": "Salesperson Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Salesperson Name",
									"type": "String"
								},
								"sink": {
									"name": "Salesperson Name",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "credit_status",
									"type": "String"
								},
								"sink": {
									"name": "credit_status",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "date_acct_opened",
									"type": "DateTime"
								},
								"sink": {
									"name": "date_acct_opened",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "Credit Limit (LCY)",
									"type": "Decimal"
								},
								"sink": {
									"name": "Credit Limit (LCY)",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "credit_limit_used",
									"type": "Decimal"
								},
								"sink": {
									"name": "credit_limit_used",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "Balance",
									"type": "Decimal"
								},
								"sink": {
									"name": "Balance",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "highest_credit_limit_used",
									"type": "Int32"
								},
								"sink": {
									"name": "highest_credit_limit_used",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "last_payment_received_date",
									"type": "DateTime"
								},
								"sink": {
									"name": "last_payment_received_date",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "last_payment_received_amount",
									"type": "Decimal"
								},
								"sink": {
									"name": "last_payment_received_amount",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "Language_Code",
									"type": "Int32"
								},
								"sink": {
									"name": "Language_Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Bank_Communication",
									"type": "String"
								},
								"sink": {
									"name": "Bank_Communication",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Currency_Code",
									"type": "String"
								},
								"sink": {
									"name": "Currency_code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Next_Review_Date",
									"type": "DateTime"
								},
								"sink": {
									"name": "Next_Review_Date",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "Credit_Analyst",
									"type": "Int32"
								},
								"sink": {
									"name": "Credit_Analyst",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Credit_Exposure",
									"type": "Int32"
								},
								"sink": {
									"name": "Credit_Exposure",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "Business_Unit",
									"type": "Int32"
								},
								"sink": {
									"name": "Business_Unit",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Geographical_Location",
									"type": "Int32"
								},
								"sink": {
									"name": "Geographical_Location",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Department_Code",
									"type": "Int32"
								},
								"sink": {
									"name": "Department_Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "RunId"
								},
								"sink": {
									"name": "RunId",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "SystemId"
								},
								"sink": {
									"name": "SystemId",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Blocked",
									"type": "String"
								},
								"sink": {
									"name": "Blocked",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Factoring",
									"type": "Int32"
								},
								"sink": {
									"name": "Factoring",
									"type": "Int16"
								}
							},
							{
								"source": {
									"name": "VAT Registration No_",
									"type": "String"
								},
								"sink": {
									"name": "VAT Registration No_",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Status",
									"type": "String"
								},
								"sink": {
									"name": "Status"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "NavHK",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "CustomerExtracts",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Log Start",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[load].[uspLogStart]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceName": {
							"value": {
								"value": "@pipeline().parameters.SourceName",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceType": {
							"value": "SQL",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "uspCopyData",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Log Success",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[framework].[uspCopyData]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceTableName": {
							"value": "CustomerExtracts",
							"type": "String"
						},
						"SourceTableSchema": {
							"value": "stg",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Log Fail",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[load].[uspLogEnd]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceName": {
							"value": {
								"value": "@pipeline().parameters.SourceName",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceType": {
							"value": "SQL",
							"type": "String"
						},
						"Status": {
							"value": "Failed",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Log Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[load].[uspLogEnd]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceName": {
							"value": {
								"value": "@pipeline().parameters.SourceName",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceType": {
							"value": "SQL",
							"type": "String"
						},
						"Status": {
							"value": "Success",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"SourceName": {
				"type": "string",
				"defaultValue": "AP-HK02-CustomerExtract"
			},
			"sourceSchema": {
				"type": "string",
				"defaultValue": "DSI - Hong Kong SPP"
			},
			"sourceTable": {
				"type": "string",
				"defaultValue": "Customer"
			}
		},
		"folder": {
			"name": "HK02"
		},
		"annotations": [],
		"lastPublishTime": "2022-01-13T07:02:45Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}