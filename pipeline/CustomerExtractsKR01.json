{
	"name": "CustomerExtractsKR01",
	"properties": {
		"activities": [
			{
				"name": "Copy data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Log Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"additionalColumns": [
							{
								"name": "RunId",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							{
								"name": "SystemId",
								"value": "AP-KR01"
							}
						],
						"sqlReaderQuery": {
							"value": "DECLARE @CurrencyCode AS NVARCHAR(50)\nSELECT @CurrencyCode = dbo.[@{pipeline().parameters.sourceSchema}$General Ledger Setup].[LCY Code]\nFROM dbo.[@{pipeline().parameters.sourceSchema}$General Ledger Setup]\n\nSELECT\n\t  'Navision' as ERP\n\t  ,Cust.[No_]\n\t  ,(select(dbo.[@{pipeline().parameters.sourceSchema}$Company Information].Name)\n\t     FROM dbo.[@{pipeline().parameters.sourceSchema}$Company Information]) AS Company_Name\n\t  ,(select dbo.[@{pipeline().parameters.sourceSchema}$Company Information].[Country Code]\n\t    FROM dbo.[@{pipeline().parameters.sourceSchema}$Company Information]) AS Country_Code\n\t  ,(select dbo.[@{pipeline().parameters.sourceSchema}$Country].Name\n\t    FROM dbo.[@{pipeline().parameters.sourceSchema}$Country]\n\t\tWHERE dbo.[@{pipeline().parameters.sourceSchema}$Country].Code = (select dbo.[@{pipeline().parameters.sourceSchema}$Company Information].[Country Code]\n\t    FROM dbo.[@{pipeline().parameters.sourceSchema}$Company Information])) AS Country_Name\n      ,Cust.Name\n      ,Cust.[Address (English)] as [Address]\n      ,Cust.[Address 2 (English)] as [Address 2]\n      ,Cust.City\n\t  ,Cust.County AS State\n      ,Cust.[Post Code]\n\t  ,(SELECT CASE Cust.[Country Code]\n\t    WHEN '' then (SELECT(dbo.[@{pipeline().parameters.sourceSchema}$Company Information].[Country Code]) FROM dbo.[@{pipeline().parameters.sourceSchema}$Company Information])\n\t\tELSE Cust.[Country Code] END) AS Cust_Country_Code\n      ,Cust.[Payment Terms Code]\n\t  ,Cust.[Salesperson Code]\n\t  ,sp.Name as [Salesperson Name]\n\t  ,(select Case Cust.Blocked\n\t    when 0 THEN 'Active' ELSE 'Blocked' END) AS credit_status\n\t  ,(select ISNULL(MIN(dbo.[@{pipeline().parameters.sourceSchema}$Change Log Entry].[Date and Time]), 0) as date_acct_opened\n\t    FROM dbo.[@{pipeline().parameters.sourceSchema}$Change Log Entry]\n\t\tWHERE dbo.[@{pipeline().parameters.sourceSchema}$Change Log Entry].[Table No_] = 18\n\t\t AND dbo.[@{pipeline().parameters.sourceSchema}$Change Log Entry].[Field No_] = 1\n\t\t AND dbo.[@{pipeline().parameters.sourceSchema}$Change Log Entry].[Type of Change] = 0\n\t\t AND dbo.[@{pipeline().parameters.sourceSchema}$Change Log Entry].[New Value] = Cust.No_) as date_acct_opened\n\t  ,Cust.[Credit Limit (LCY)]\n\t  ,Cust.[Credit Limit (LCY)] - (SELECT ISNULL(SUM(dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry].[Amount (LCY)]), 0)\n\t\tFROM dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry]\n\t\tWHERE dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry].[Customer No_] = Cust.No_) AS credit_limit_used\n\t  ,(SELECT ISNULL(SUM(dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry].[Amount (LCY)]), 0)\n\t\tFROM dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry]\n\t\tWHERE dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry].[Customer No_] = Cust.No_) AS Balance\n\t  ,NULL AS highest_credit_limit_used\n\t  ,(SELECT ISNULL(MAX(dbo.[@{pipeline().parameters.sourceSchema}$Cust_ Ledger Entry].[Document Date]), 0)\n\t   FROM dbo.[@{pipeline().parameters.sourceSchema}$Cust_ Ledger Entry]\n\t   WHERE (dbo.[@{pipeline().parameters.sourceSchema}$Cust_ Ledger Entry].[Customer No_] = Cust.No_)) AS last_payment_received_date\n\t  ,(SELECT ISNULL(MAX(dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry].Amount), 0)\n\t  FROM dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry]\n\t  WHERE dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry].[Document Type] = 1\n\t  AND dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry].[Customer No_] = Cust.No_\n\t  AND dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry].Amount < 0\n\t  /*AND dbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry].[Entry Type] = 0*/\n\t  ) AS last_payment_received_amount\n\t  ,null AS Language_Code\n\t  ,'' AS Bank_Communication\n\t  ,(select CASE Cust.[Currency Code]\n\t   when '' then @CurrencyCode ELSE Cust.[Currency Code] END) AS Currency_Code\n\t  ,Cast( null as datetime) AS Next_Review_Date\n\t  ,NULL As Credit_Analyst\n\t  ,NULL As Credit_Exposure\n\t  ,NULL AS Business_Unit\n\t  ,NULL AS Geographical_Location\n\t  ,NULL AS Department_Code\n\t  ,CASE\n\t\tWHEN Cust.Blocked = 0 THEN 'Empty'\n\t\tWHEN Cust.Blocked = 1 THEN 'Ship'\n\t\tWHEN Cust.Blocked = 2 THEN 'Invoice'\n\t\tWHEN Cust.Blocked = 3 THEN 'All'\n\t\tELSE 'Unknown'\n\t   END AS Blocked\n\t   ,null as Factoring\n       ,Cust. [VAT Registration No_] AS [VAT Registration No_]\n\t   ,CASE\n\t     WHEN Cust.Status = 0 THEN 'Active'\n\t\t ELSE 'Inactive'\n\t\tEND AS Status\t   \n  FROM dbo.[@{pipeline().parameters.sourceSchema}$Customer] as Cust\n  LEFT JOIN dbo.[@{pipeline().parameters.sourceSchema}$Salesperson_Purchaser] sp ON Cust.[Salesperson Code] = sp.Code",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "ERP",
									"type": "String"
								},
								"sink": {
									"name": "ERP",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "No_",
									"type": "String"
								},
								"sink": {
									"name": "No_",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Company_Name",
									"type": "String"
								},
								"sink": {
									"name": "Company_Name",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Country_Code",
									"type": "String"
								},
								"sink": {
									"name": "Country_Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Country_Name",
									"type": "String"
								},
								"sink": {
									"name": "Country_Name",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Name",
									"type": "String"
								},
								"sink": {
									"name": "Name",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Address",
									"type": "String"
								},
								"sink": {
									"name": "Address",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Address 2",
									"type": "String"
								},
								"sink": {
									"name": "Address 2",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "City",
									"type": "String"
								},
								"sink": {
									"name": "City",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "State",
									"type": "String"
								},
								"sink": {
									"name": "State",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Post Code",
									"type": "String"
								},
								"sink": {
									"name": "Post Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Cust_Country_Code",
									"type": "String"
								},
								"sink": {
									"name": "Cust_Country_Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Payment Terms Code",
									"type": "String"
								},
								"sink": {
									"name": "Payment Terms Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Salesperson Code",
									"type": "String"
								},
								"sink": {
									"name": "Salesperson Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Salesperson Name",
									"type": "String"
								},
								"sink": {
									"name": "Salesperson Name",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "credit_status",
									"type": "String"
								},
								"sink": {
									"name": "credit_status",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "date_acct_opened",
									"type": "DateTime"
								},
								"sink": {
									"name": "date_acct_opened",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "Credit Limit (LCY)",
									"type": "Decimal"
								},
								"sink": {
									"name": "Credit Limit (LCY)",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "credit_limit_used",
									"type": "Decimal"
								},
								"sink": {
									"name": "credit_limit_used",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "Balance",
									"type": "Decimal"
								},
								"sink": {
									"name": "Balance",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "highest_credit_limit_used",
									"type": "Int32"
								},
								"sink": {
									"name": "highest_credit_limit_used",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "last_payment_received_date",
									"type": "DateTime"
								},
								"sink": {
									"name": "last_payment_received_date",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "last_payment_received_amount",
									"type": "Decimal"
								},
								"sink": {
									"name": "last_payment_received_amount",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "Language_Code",
									"type": "Int32"
								},
								"sink": {
									"name": "Language_Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Bank_Communication",
									"type": "String"
								},
								"sink": {
									"name": "Bank_Communication",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Currency_Code",
									"type": "String"
								},
								"sink": {
									"name": "Currency_code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Next_Review_Date",
									"type": "DateTime"
								},
								"sink": {
									"name": "Next_Review_Date",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "Credit_Analyst",
									"type": "Int32"
								},
								"sink": {
									"name": "Credit_Analyst",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Credit_Exposure",
									"type": "Int32"
								},
								"sink": {
									"name": "Credit_Exposure",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "Business_Unit",
									"type": "Int32"
								},
								"sink": {
									"name": "Business_Unit",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Geographical_Location",
									"type": "Int32"
								},
								"sink": {
									"name": "Geographical_Location",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Department_Code",
									"type": "Int32"
								},
								"sink": {
									"name": "Department_Code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "RunId"
								},
								"sink": {
									"name": "RunId",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "SystemId"
								},
								"sink": {
									"name": "SystemId",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Blocked",
									"type": "String"
								},
								"sink": {
									"name": "Blocked",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Factoring",
									"type": "Int32"
								},
								"sink": {
									"name": "Factoring",
									"type": "Int16"
								}
							},
							{
								"source": {
									"name": "VAT Registration No_",
									"type": "String"
								},
								"sink": {
									"name": "VAT Registration No_",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Status",
									"type": "String"
								},
								"sink": {
									"name": "Status"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "NavKR",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "CustomerExtracts",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Log Start",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[load].[uspLogStart]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceName": {
							"value": {
								"value": "@pipeline().parameters.SourceName",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceType": {
							"value": "SQL",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "uspCopyData",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Log Success",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[framework].[uspCopyData]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceTableName": {
							"value": "CustomerExtracts",
							"type": "String"
						},
						"SourceTableSchema": {
							"value": "stg",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Log Fail",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[load].[uspLogEnd]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceName": {
							"value": {
								"value": "@pipeline().parameters.SourceName",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceType": {
							"value": "SQL",
							"type": "String"
						},
						"Status": {
							"value": "Failed",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Log Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[load].[uspLogEnd]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceName": {
							"value": {
								"value": "@pipeline().parameters.SourceName",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceType": {
							"value": "SQL",
							"type": "String"
						},
						"Status": {
							"value": "Success",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"SourceName": {
				"type": "string",
				"defaultValue": "AP-KR01-CustomerExtract"
			},
			"sourceSchema": {
				"type": "string",
				"defaultValue": "DSI - Korea"
			},
			"sourceTable": {
				"type": "string",
				"defaultValue": "Customer"
			}
		},
		"folder": {
			"name": "KR"
		},
		"annotations": [],
		"lastPublishTime": "2022-01-13T07:02:45Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}