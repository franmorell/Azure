{
	"name": "PaymentHistoryExtractsPL",
	"properties": {
		"activities": [
			{
				"name": "Copy data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Log Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"additionalColumns": [
							{
								"name": "RunId",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							{
								"name": "SystemId",
								"value": "EU-PL01"
							}
						],
						"sqlReaderQuery": {
							"value": "\tDECLARE @CurrencyCode AS NVARCHAR(50)\n\tSELECT @CurrencyCode = [LCY Code]\n\tFROM dbo.[@{pipeline().parameters.sourceSchema}$General Ledger Setup]\n\n\tDECLARE @CountryCode AS NVARCHAR(50)\n\tDECLARE @Company_ID AS NVARCHAR(50)\n\tSELECT \n\t\t@CountryCode = [Country_Region Code],\n\t\t@Company_ID = [Name]\n\tFROM dbo.[@{pipeline().parameters.sourceSchema}$Company Information]\n\n\t;WITH DetailedCustLedgerEntryCTE AS (\n\t\tSELECT\n\t\t\t[Cust_ Ledger Entry No_],\n\t\t\tSUM([Amount]) AS Open_Amount,\n\t\t\tSUM(IIF(\n\t\t\t\t\t[Entry Type] IN (\n\t\t\t\t\t\t1 -- Initial Entry,\n\t\t\t\t\t\t--,2 -- Application\n\t\t\t\t\t\t,3 -- Unrealized Loss,\n\t\t\t\t\t\t,4 -- Unrealized Gain,\n\t\t\t\t\t\t,5 -- Realized Loss,\n\t\t\t\t\t\t,6 -- Realized Gain,\n\t\t\t\t\t\t,7 -- Payment Discount,\n\t\t\t\t\t\t,8 -- Payment Discount (VAT Excl.),\n\t\t\t\t\t\t,9 -- Payment Discount (VAT Adjustment),\n\t\t\t\t\t\t--,10 -- Appln. Rounding,\n\t\t\t\t\t\t--,11 -- Correction of Remaining Amount,\n\t\t\t\t\t\t,12 -- Payment Tolerance,\n\t\t\t\t\t\t,13 -- Payment Discount Tolerance,\n\t\t\t\t\t\t,14 -- Payment Tolerance (VAT Excl.),\n\t\t\t\t\t\t,15 -- Payment Tolerance (VAT Adjustment),\n\t\t\t\t\t\t,16 -- Payment Discount Tolerance (VAT Excl.),\n\t\t\t\t\t\t,17 -- Payment Discount Tolerance (VAT Adjustment)\n\t\t\t\t\t),\n\t\t\t\t\tAmount, 0\n\t\t\t\t)\n\t\t\t) AS Invoice_Amount\n\t\tFROM\n\t\t\tdbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry]\n\t\tGROUP BY\n\t\t\t[Cust_ Ledger Entry No_]\n\t),\n\tDetailedCustLedgerEntryByDocumentCTE AS (\n\t\tSELECT\n\t\t\t[Document No_],\n\t\t\tMIN([Posting Date]) as Document_Date,\n\t\t\tSUM(IIF(\n\t\t\t\t\t[Entry Type] IN (\n\t\t\t\t\t\t1 -- Initial Entry,\n\t\t\t\t\t\t--,2 -- Application\n\t\t\t\t\t\t,3 -- Unrealized Loss,\n\t\t\t\t\t\t,4 -- Unrealized Gain,\n\t\t\t\t\t\t,5 -- Realized Loss,\n\t\t\t\t\t\t,6 -- Realized Gain,\n\t\t\t\t\t\t,7 -- Payment Discount,\n\t\t\t\t\t\t,8 -- Payment Discount (VAT Excl.),\n\t\t\t\t\t\t,9 -- Payment Discount (VAT Adjustment),\n\t\t\t\t\t\t--,10 -- Appln. Rounding,\n\t\t\t\t\t\t--,11 -- Correction of Remaining Amount,\n\t\t\t\t\t\t,12 -- Payment Tolerance,\n\t\t\t\t\t\t,13 -- Payment Discount Tolerance,\n\t\t\t\t\t\t,14 -- Payment Tolerance (VAT Excl.),\n\t\t\t\t\t\t,15 -- Payment Tolerance (VAT Adjustment),\n\t\t\t\t\t\t,16 -- Payment Discount Tolerance (VAT Excl.),\n\t\t\t\t\t\t,17 -- Payment Discount Tolerance (VAT Adjustment)\n\t\t\t\t\t),\n\t\t\t\t\tAmount, 0\n\t\t\t\t)\n\t\t\t) AS Invoice_Amount\n\t\tFROM\n\t\t\tdbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry]\n\t\tGROUP BY\n\t\t\t[Document No_]\n\t),\n\tReceivedPayments as (\n\t\tselect distinct [Document No_]\n\t\tfrom dbo.[@{pipeline().parameters.sourceSchema}$Bank Account Ledger Entry]\n\t)\n\tSELECT\n\t\t'Navision' as ERP,\n\t\t@Company_ID AS Company_ID,\n\t\tcle.[Entry No_] as CustomerLedgerEntryNumber,\n\t\tcle.[Document Date] as [Creation Date],\n\t\tcle.[Customer No_] as Customer_No ,\n\t\tc.[Name] as [Name],\n\t\tIIF(c.[Customer Posting Group] LIKE 'IC%', 'INTERCOMPANY', cle.[Global Dimension 1 Code]) as Business_Unit,\n\t\tnull as Region,\n\t\tcle.[Transaction No_] as Transaction_ID,\n\t\tCASE cle.[Document Type]\n\t\t\twhen 0 THEN 'N/A'\n\t\t\tWHEN 1 THEN 'PAYMENT'\n\t\t\tWHEN 2 THEN 'INVOICE'\n\t\t\tWHEN 3 THEN 'CREDIT MEMO'\n\t\t\tWHEN 4 THEN 'FINANCE CHARGE MEMO'\n\t\t\tWHEN 5 THEN 'REMINDER'\n\t\t\tWHEN 6 THEN 'REFUND'\n\t\t\tELSE 'UNKNOWN'\n\t\tEND [Document_Type],\n\t\tcle.[Posting Date] as Transaction_Date,\n\t\tIIF(cle.[Currency Code] = '', @CurrencyCode, cle.[Currency Code]) as Transaction_Currency,\n\t\tNULL as REPORTING_TX_AMOUNT,\n\t\tdcle.Invoice_Amount TX_AMOUNT_APPLIED,\n\t\tIIF(cle.[Applies-to Doc_ No_]='', NULL, cle.[Applies-to Doc_ No_]) as INVOICE_NUMBER,\n\t\tdclebd.Document_Date as DOCUMENT_DATE,\n\t\tdclebd.Invoice_Amount as ORIG_TX_AMOUNT,\n\t\t'WIRE' as PAYMENT_METHOD,\n\t\tnull as COUNTRY,\n\t\tcle.[Open]\n\tFROM\n\t\tdbo.[@{pipeline().parameters.sourceSchema}$Cust_ Ledger Entry] cle\n\t\tLEFT JOIN dbo.[@{pipeline().parameters.sourceSchema}$Customer] c ON cle.[Customer No_]=c.[No_]\n\t\tLEFT JOIN DetailedCustLedgerEntryCTE dcle ON cle.[Entry No_] = dcle.[Cust_ Ledger Entry No_]\n\t\tLEFT JOIN DetailedCustLedgerEntryByDocumentCTE dclebd ON IIF(cle.[Applies-to Doc_ No_]='', NULL, cle.[Applies-to Doc_ No_]) = dclebd.[Document No_]\n\t\tLEFT JOIN ReceivedPayments rec ON cle.[Document No_] = rec.[Document No_]\n\tWHERE\n\t\t(CASE cle.[Document Type]\n\t\t\twhen 0 THEN 'N/A'\n\t\t\tWHEN 1 THEN 'PAYMENT'\n\t\t\tWHEN 2 THEN 'INVOICE'\n\t\t\tWHEN 3 THEN 'CREDIT MEMO'\n\t\t\tWHEN 4 THEN 'FINANCE CHARGE MEMO'\n\t\t\tWHEN 5 THEN 'REMINDER'\n\t\t\tWHEN 6 THEN 'REFUND'\n\t\t\tELSE 'UNKNOWN'\n\t\tEND = 'PAYMENT'\n\t\tOR rec.[Document No_] IS NOT NULL)\n\t\tAND UPPER(cle.[Document No_]) NOT LIKE 'WB'\n\t\tAND UPPER(cle.[Document No_]) NOT LIKE 'PK'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "ERP",
									"type": "String"
								},
								"sink": {
									"name": "ERP",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Company_ID",
									"type": "String"
								},
								"sink": {
									"name": "Company_ID",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "CustomerLedgerEntryNumber",
									"type": "Int32"
								},
								"sink": {
									"name": "CustomerLedgerEntryNumber",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Creation Date",
									"type": "DateTime"
								},
								"sink": {
									"name": "Creation Date",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "DOCUMENT_DATE",
									"type": "DateTime"
								},
								"sink": {
									"name": "DOCUMENT_DATE",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "Customer_No",
									"type": "String"
								},
								"sink": {
									"name": "Customer_No",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Name",
									"type": "String"
								},
								"sink": {
									"name": "Name",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Business_Unit",
									"type": "String"
								},
								"sink": {
									"name": "Business_Unit",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Region",
									"type": "Int32"
								},
								"sink": {
									"name": "Region",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Transaction_ID",
									"type": "Int32"
								},
								"sink": {
									"name": "Transaction_ID",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "Document_Type",
									"type": "String"
								},
								"sink": {
									"name": "Document_Type",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Transaction_Date",
									"type": "DateTime"
								},
								"sink": {
									"name": "Transaction_Date",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "Transaction_Currency",
									"type": "String"
								},
								"sink": {
									"name": "Transaction_Currency",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "REPORTING_TX_AMOUNT",
									"type": "Int32"
								},
								"sink": {
									"name": "REPORTING_TX_AMOUNT",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "TX_AMOUNT_APPLIED",
									"type": "Decimal"
								},
								"sink": {
									"name": "TX_AMOUNT_APPLIED",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "INVOICE_NUMBER",
									"type": "String"
								},
								"sink": {
									"name": "INVOICE_NUMBER",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "ORIG_TX_AMOUNT",
									"type": "Decimal"
								},
								"sink": {
									"name": "ORIG_TX_AMOUNT",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "PAYMENT_METHOD",
									"type": "String"
								},
								"sink": {
									"name": "PAYMENT_METHOD",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "COUNTRY",
									"type": "Int32"
								},
								"sink": {
									"name": "COUNTRY",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Open",
									"type": "Byte"
								},
								"sink": {
									"name": "Open",
									"type": "Int16"
								}
							},
							{
								"source": {
									"name": "RunId"
								},
								"sink": {
									"name": "RunId",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "SystemId"
								},
								"sink": {
									"name": "SystemId",
									"type": "String"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "NavPL",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "PaymentHistoryExtracts",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Log Start",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[load].[uspLogStart]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceName": {
							"value": {
								"value": "@pipeline().parameters.SourceName",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceType": {
							"value": "SQL",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "uspCopyData",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Log Success",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[framework].[uspCopyData]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceTableName": {
							"value": "PaymentHistoryExtracts",
							"type": "String"
						},
						"SourceTableSchema": {
							"value": "stg",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Log Fail",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[load].[uspLogEnd]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceName": {
							"value": {
								"value": "@pipeline().parameters.SourceName",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceType": {
							"value": "SQL",
							"type": "String"
						},
						"Status": {
							"value": "Failed",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Log Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[load].[uspLogEnd]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceName": {
							"value": {
								"value": "@pipeline().parameters.SourceName",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceType": {
							"value": "SQL",
							"type": "String"
						},
						"Status": {
							"value": "Success",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"SourceName": {
				"type": "string",
				"defaultValue": "EU-PL01-PaymentHistoryExtracts"
			},
			"sourceSchema": {
				"type": "string",
				"defaultValue": "DSI Polska Live"
			},
			"sourceTable": {
				"type": "string",
				"defaultValue": "BankLedgerEntry"
			}
		},
		"folder": {
			"name": "PL"
		},
		"annotations": [],
		"lastPublishTime": "2021-03-29T15:37:00Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}