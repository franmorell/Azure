{
	"name": "PaymentHistoryExtractsBE",
	"properties": {
		"activities": [
			{
				"name": "Copy data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Log Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"additionalColumns": [
							{
								"name": "RunId",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							{
								"name": "SystemId",
								"value": "EU-BE01"
							}
						],
						"sqlReaderQuery": {
							"value": "DECLARE @CurrencyCode AS NVARCHAR(50)\nSELECT @CurrencyCode = [LCY Code]\nFROM dbo.[@{pipeline().parameters.sourceSchema}$General Ledger Setup]\n\nDECLARE @CountryCode AS NVARCHAR(50)\nDECLARE @Company_ID AS NVARCHAR(50)\nSELECT \n\t@CountryCode = [Country Code],\n\t@Company_ID = [Name]\nFROM dbo.[@{pipeline().parameters.sourceSchema}$Company Information]\n\n;WITH DetailedCustLedgerEntryCTE AS (\n\tSELECT\n\t\t[Cust_ Ledger Entry No_],\n\t\tSUM([Amount]) AS Open_Amount,\n\t\tSUM(IIF(\n\t\t\t\t[Entry Type] IN (\n\t\t\t\t\t1 -- Initial Entry,\n\t\t\t\t\t--,2 -- Application\n\t\t\t\t\t,3 -- Unrealized Loss,\n\t\t\t\t\t,4 -- Unrealized Gain,\n\t\t\t\t\t,5 -- Realized Loss,\n\t\t\t\t\t,6 -- Realized Gain,\n\t\t\t\t\t,7 -- Payment Discount,\n\t\t\t\t\t,8 -- Payment Discount (VAT Excl.),\n\t\t\t\t\t,9 -- Payment Discount (VAT Adjustment),\n\t\t\t\t\t--,10 -- Appln. Rounding,\n\t\t\t\t\t--,11 -- Correction of Remaining Amount,\n\t\t\t\t\t,12 -- Payment Tolerance,\n\t\t\t\t\t,13 -- Payment Discount Tolerance,\n\t\t\t\t\t,14 -- Payment Tolerance (VAT Excl.),\n\t\t\t\t\t,15 -- Payment Tolerance (VAT Adjustment),\n\t\t\t\t\t,16 -- Payment Discount Tolerance (VAT Excl.),\n\t\t\t\t\t,17 -- Payment Discount Tolerance (VAT Adjustment)\n\t\t\t\t),\n\t\t\t\tAmount, 0\n\t\t\t)\n\t\t) AS Invoice_Amount\n\tFROM\n\t\tdbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry]\n\tGROUP BY\n\t\t[Cust_ Ledger Entry No_]\n),\nDetailedCustLedgerEntryByDocumentCTE AS (\n\tSELECT\n\t\t[Document No_],\n\t\tMIN([Posting Date]) as Document_Date,\n\t\tSUM(IIF(\n\t\t\t\t[Entry Type] IN (\n\t\t\t\t\t1 -- Initial Entry,\n\t\t\t\t\t--,2 -- Application\n\t\t\t\t\t,3 -- Unrealized Loss,\n\t\t\t\t\t,4 -- Unrealized Gain,\n\t\t\t\t\t,5 -- Realized Loss,\n\t\t\t\t\t,6 -- Realized Gain,\n\t\t\t\t\t,7 -- Payment Discount,\n\t\t\t\t\t,8 -- Payment Discount (VAT Excl.),\n\t\t\t\t\t,9 -- Payment Discount (VAT Adjustment),\n\t\t\t\t\t--,10 -- Appln. Rounding,\n\t\t\t\t\t--,11 -- Correction of Remaining Amount,\n\t\t\t\t\t,12 -- Payment Tolerance,\n\t\t\t\t\t,13 -- Payment Discount Tolerance,\n\t\t\t\t\t,14 -- Payment Tolerance (VAT Excl.),\n\t\t\t\t\t,15 -- Payment Tolerance (VAT Adjustment),\n\t\t\t\t\t,16 -- Payment Discount Tolerance (VAT Excl.),\n\t\t\t\t\t,17 -- Payment Discount Tolerance (VAT Adjustment)\n\t\t\t\t),\n\t\t\t\tAmount, 0\n\t\t\t)\n\t\t) AS Invoice_Amount\n\tFROM\n\t\tdbo.[@{pipeline().parameters.sourceSchema}$Detailed Cust_ Ledg_ Entry]\n\tGROUP BY\n\t\t[Document No_]\n),\nReceivedPayments as (\n    select distinct [Document No_]\n    from dbo.[@{pipeline().parameters.sourceSchema}$Bank Account Ledger Entry]\n)\nSELECT \n\t'Navision' as ERP,\n\t@Company_ID AS Company_ID,\n\tcle.[Entry No_] as CustomerLedgerEntryNumber,\n\tcle.[Document Date] as [Creation Date],\n\tcle.[Customer No_] as Customer_No ,\n\tc.[Name] as [Name],\n\tCASE\n\t\tWHEN c.[Customer Posting Group] = 'INTERN-DSI' THEN 'INTERCOMPANY'\n\t\tWHEN sih.[Responsibility Center] IN ('VK10', 'VK15') THEN 'PT'\n\t\tWHEN sih.[Responsibility Center] IN ('VK20', 'VK25', 'VK30', 'VK40') THEN 'GT'\n\t\tELSE NULL \n\tEND AS Business_Unit,\n\tnull as Region,\n\tcle.[Transaction No_] as Transaction_ID,\n\tCASE cle.[Document Type]\n\t\twhen 0 THEN 'N/A'\n\t\tWHEN 1 THEN 'PAYMENT'\n\t\tWHEN 2 THEN 'INVOICE'\n\t\tWHEN 3 THEN 'CREDIT MEMO'\n\t\tWHEN 4 THEN 'FINANCE CHARGE MEMO'\n\t\tWHEN 5 THEN 'REMINDER'\n\t\tWHEN 6 THEN 'REFUND'\n\t\tELSE 'UNKNOWN'\n\tEND [Document_Type],\n\tcle.[Posting Date] as Transaction_Date,\n\tIIF(cle.[Currency Code] = '', @CurrencyCode, cle.[Currency Code]) as Transaction_Currency,\n\tNULL as REPORTING_TX_AMOUNT,\n\tdcle.Invoice_Amount TX_AMOUNT_APPLIED,\n\tIIF(cle.[Applies-to Doc_ No_]='', NULL, cle.[Applies-to Doc_ No_]) as INVOICE_NUMBER,\n\tdclebd.Document_Date as DOCUMENT_DATE,\n\tdclebd.Invoice_Amount as ORIG_TX_AMOUNT,\n\t'WIRE' as PAYMENT_METHOD,\n\tnull as COUNTRY,\n\tcle.[Open]\nFROM\n\tdbo.[@{pipeline().parameters.sourceSchema}$Cust_ Ledger Entry] cle\n\tLEFT JOIN dbo.[@{pipeline().parameters.sourceSchema}$Customer] c ON cle.[Customer No_]=c.[No_]\n\tLEFT JOIN DetailedCustLedgerEntryCTE dcle ON cle.[Entry No_] = dcle.[Cust_ Ledger Entry No_]\n\tLEFT JOIN DetailedCustLedgerEntryByDocumentCTE dclebd ON IIF(cle.[Applies-to Doc_ No_]='', NULL, cle.[Applies-to Doc_ No_]) = dclebd.[Document No_]\n\tLEFT JOIN dbo.[@{pipeline().parameters.sourceSchema}$Job] j ON cle.[Global Dimension 2 Code] = j.No_\n    LEFT JOIN dbo.[@{pipeline().parameters.sourceSchema}$Sales Invoice Header] sih ON cle.[Document No_] = sih.[No_]\n\tLEFT JOIN ReceivedPayments rec ON cle.[Document No_] = rec.[Document No_]\nWHERE\n\t(CASE cle.[Document Type]\n\t\twhen 0 THEN 'N/A'\n\t\tWHEN 1 THEN 'PAYMENT'\n\t\tWHEN 2 THEN 'INVOICE'\n\t\tWHEN 3 THEN 'CREDIT MEMO'\n\t\tWHEN 4 THEN 'FINANCE CHARGE MEMO'\n\t\tWHEN 5 THEN 'REMINDER'\n\t\tWHEN 6 THEN 'REFUND'\n\t\tELSE 'UNKNOWN'\n\tEND = 'PAYMENT'\n\tOR rec.[Document No_] IS NOT NULL)\n\tAND cle.[Document No_] != ''\n\tAND cle.[Document No_] != '0'\n\tAND cle.[Document No_] IS NOT NULL",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "ERP",
									"type": "String"
								},
								"sink": {
									"name": "ERP",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Company_ID",
									"type": "String"
								},
								"sink": {
									"name": "Company_ID",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "CustomerLedgerEntryNumber",
									"type": "Int32"
								},
								"sink": {
									"name": "CustomerLedgerEntryNumber",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Creation Date",
									"type": "DateTime"
								},
								"sink": {
									"name": "Creation Date",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "DOCUMENT_DATE",
									"type": "DateTime"
								},
								"sink": {
									"name": "DOCUMENT_DATE",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "Customer_No",
									"type": "String"
								},
								"sink": {
									"name": "Customer_No",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Name",
									"type": "String"
								},
								"sink": {
									"name": "Name",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Business_Unit",
									"type": "String"
								},
								"sink": {
									"name": "Business_Unit",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Region",
									"type": "Int32"
								},
								"sink": {
									"name": "Region",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Transaction_ID",
									"type": "Int32"
								},
								"sink": {
									"name": "Transaction_ID",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "Document_Type",
									"type": "String"
								},
								"sink": {
									"name": "Document_Type",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Transaction_Date",
									"type": "DateTime"
								},
								"sink": {
									"name": "Transaction_Date",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "Transaction_Currency",
									"type": "String"
								},
								"sink": {
									"name": "Transaction_Currency",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "REPORTING_TX_AMOUNT",
									"type": "Int32"
								},
								"sink": {
									"name": "REPORTING_TX_AMOUNT",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "TX_AMOUNT_APPLIED",
									"type": "Decimal"
								},
								"sink": {
									"name": "TX_AMOUNT_APPLIED",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "INVOICE_NUMBER",
									"type": "String"
								},
								"sink": {
									"name": "INVOICE_NUMBER",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "ORIG_TX_AMOUNT",
									"type": "Decimal"
								},
								"sink": {
									"name": "ORIG_TX_AMOUNT",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "PAYMENT_METHOD",
									"type": "String"
								},
								"sink": {
									"name": "PAYMENT_METHOD",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "COUNTRY",
									"type": "Int32"
								},
								"sink": {
									"name": "COUNTRY",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Open",
									"type": "Byte"
								},
								"sink": {
									"name": "Open",
									"type": "Int16"
								}
							},
							{
								"source": {
									"name": "RunId"
								},
								"sink": {
									"name": "RunId",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "SystemId"
								},
								"sink": {
									"name": "SystemId",
									"type": "String"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "NavBEandNL",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "PaymentHistoryExtracts",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Log Start",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[load].[uspLogStart]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceName": {
							"value": {
								"value": "@pipeline().parameters.SourceName",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceType": {
							"value": "SQL",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "uspCopyData",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Log Success",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[framework].[uspCopyData]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceTableName": {
							"value": "PaymentHistoryExtracts",
							"type": "String"
						},
						"SourceTableSchema": {
							"value": "stg",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Log Fail",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[load].[uspLogEnd]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceName": {
							"value": {
								"value": "@pipeline().parameters.SourceName",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceType": {
							"value": "SQL",
							"type": "String"
						},
						"Status": {
							"value": "Failed",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Log Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[load].[uspLogEnd]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceName": {
							"value": {
								"value": "@pipeline().parameters.SourceName",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceType": {
							"value": "SQL",
							"type": "String"
						},
						"Status": {
							"value": "Success",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DYWIDAG_DWH",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"SourceName": {
				"type": "string",
				"defaultValue": "EU-BE01-PaymentHistoryExtracts"
			},
			"sourceSchema": {
				"type": "string",
				"defaultValue": "Dywidag-Systems Int_ N_V_"
			},
			"sourceTable": {
				"type": "string",
				"defaultValue": "BankLedgerEntry"
			}
		},
		"folder": {
			"name": "BE"
		},
		"annotations": [],
		"lastPublishTime": "2021-03-30T13:24:50Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}